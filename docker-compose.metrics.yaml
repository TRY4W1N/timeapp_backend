services:
  app:
    build: 
      context: .
      target: app
    container_name: app
    ports:
      - $APP_PORT:$APP_PORT
    command: python -m src.presentation.http.app
    env_file:
      - .env
    networks:
      - app.network
    logging:
      driver: "json-file"
    depends_on:
      - db
    
  db:
    image: mongo:latest
    restart: always
    ports:
      - $MONGODB_PORT:$MONGODB_PORT
    env_file:
      - .env
    volumes:
      - db-logs:/var/log/mongodb/
      - ./infra/docker/mongo/init_mongo.js:/docker-entrypoint-initdb.d/init_mongo.js:ro


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - $PROMETHEUS_PORT:$PROMETHEUS_PORT
    volumes:
      - ./infra/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml' 
    env_file:
      - .env
    depends_on: 
      - grafana
    networks:
      - app.network

  vector:
    image: timberio/vector:latest-alpine
    container_name: vector
    command: --config /etc/vector/vector_config.yaml
    volumes:
      - ./infra/docker/vector/vector_config.yaml:/etc/vector/vector_config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env
    depends_on:
      - loki
    networks:
      - grafana.network
    logging:
      driver: "json-file"

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: 
      - -config.file=/etc/loki/loki_config.yaml
      - -config.expand-env=true
    hostname: $LOKI_HOST_NAME
    expose:
      - $LOKI_EXPOSE 
    ports:
      - $LOKI_PORT:$LOKI_PORT
    volumes:
      - loki-data:/tmp/:rw
      - ./infra/docker/loki/loki_config.yaml:/etc/loki/loki_config.yaml
    env_file:
      - .env
    depends_on:
      - grafana
    networks:
      - grafana.network

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    command: sudo chmod -R 777 ./infra /etc
    expose:
      - $GF_EXPOSE
    ports:
      - $GF_PORT:$GF_PORT
    volumes:
      - ./infra/docker/grafana/provisioning:/etc/grafana/provisioning:rw
      - grafana-data-logs:/var/lib/grafana:rw
    environment:
      - GF_SECURITY_ADMIN_USER=$GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD
      - GF_USERS_ALLOW_SIGN_UP=false
      - VIRTUAL_HOST=$GF_VIRTUAL_HOST 
      - NETWORK_ACCESS=internal 
      - VIRTUAL_PORT=$GF_VIRTUAL_PORT 
    depends_on:
      - app
    env_file:
      - .env
    user: "0:0"
    networks:
      - grafana.network
      - app.network


volumes:  
  grafana-data-logs: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./infra/docker/grafana
  db-data:
    driver: local
    name: mongo-data
  db-logs:
    driver: local
    name: mongo-logs
  loki-data: 
    driver: local
    name: loki-logs

networks:
  grafana.network: {}
  app.network: {}