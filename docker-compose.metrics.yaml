services:
  app:
    build: 
      context: .
      target: app-metric
    ports:
      - $APP_PORT:$APP_PORT
    command: python -m src.presentation.http.app
    env_file:
      - .env
    networks:
      - app.network
    depends_on:
      - db
    
  db:
    image: mongo:latest
    restart: always
    ports:
      - $MONGODB_PORT:$MONGODB_PORT
    env_file:
      - .env
    volumes:
      - db-logs:/var/log/mongodb/
      - ./infra/docker/mongo/init_mongo.js:/docker-entrypoint-initdb.d/init_mongo.js:ro


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - $PROMETHEUS_PORT:$PROMETHEUS_PORT
    volumes:
      - ./infra/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: '--config.file=/etc/prometheus/prometheus.yml' 
    env_file:
      - .env
    depends_on: 
      - app
    networks:
      - app.network

#   loki:
#     image: grafana/loki:latest
#     container_name: loki
#     command: 
#       - -config.file=/etc/loki/loki-config.yaml # make this file with conf
#       - -config.expand-env=true
#     hostname: $LOKI_HOST_NAME
#     expose:
#       - $LOKI_EXPOSE 
#     ports:
#       - $LOKI_PORT:$LOKI_PORT
#     volumes:
#       - ./infra/docker/loki/loki-config.yaml:/etc/loki/loki-config.yaml
#       - loki.data:/tmp/:rw
#     env_file:
#       - .env
#     depends_on:
#       - grafana
#     networks:
#       - grafana.network

#   vector:
#     image: timberio/vector:latest-alpine
#     container_name: vector
#     command: --config /etc/vector/vector.toml
#     expose:
#       - $VECTOR_EXPOSE 
#     volumes:
#       - ./infra/docker/vector/vector.toml:/etc/vector/vector.toml
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#     env_file:
#       - .env
#     depends_on:
#       - grafana
#     networks:
#       - grafana.network
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m" #wtf

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - $GF_PORT:$GF_PORT
    volumes:
      - ./infra/docker/grafana:/var/lib/grafana:rw
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=$GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD
      - GF_USERS_ALLOW_SIGN_UP=false
      - VIRTUAL_HOST=$GF_VIRTUAL_HOST 
      - NETWORK_ACCESS=internal 
      - VIRTUAL_PORT=$GF_VIRTUAL_PORT 
    depends_on:
      - app
    env_file:
      - .env
    user: "0:0" # as root. Change on prod
    networks:
      - grafana.network
      - app.network



volumes:  
  grafana: {}
  db-data:
    driver: local
    name: mongo-data
  db-logs:
    driver: local
    name: mongo-logs
#   loki.data:
#     driver: local
#     name: loki-data

networks:
  grafana.network: {}
  app.network: {}